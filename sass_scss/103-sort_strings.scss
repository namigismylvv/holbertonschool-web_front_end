<<<<<<< HEAD
@import "./103-sort_list.scss";
$default-sort-order: a b c d e f g h i j k l m n o p q r s t u v w x y z;
@function str-index($string, $substring) {
  @return index($string, $substring);
}
@function swap($list, $index1, $index2) {
  $temp: nth($list, $index1);
  $list: set-nth($list, $index1, nth($list, $index2));
  $list: set-nth($list, $index2, $temp);
  @return $list;
}
@function str-compare($str1, $str2, $order: $default-sort-order) {
  $len1: str-length($str1);
  $len2: str-length($str2);
  $minLen: min($len1, $len2);
  @for $i from 1 through $minLen {
    $char1: str-index($order, str-slice($str1, $i, $i));
    $char2: str-index($order, str-slice($str2, $i, $i));
    @if $char1 != $char2 {
      @return $char1 < $char2;
    }
  }
  @return $len1 < $len2;
}
@function sort($list, $order: $default-sort-order) {
  @for $i from 1 through length($list) {
    @for $j from $i * -1 through -1 {
      // abs() trick to loop backward
      $j: abs($j);
      @if $j > 1 and str-compare(nth($list, $j), nth($list, $j - 1), $order) {
        $list: swap($list, $j, $j - 1);
      }
    }
  }
  // Return the sorted list
  @return $list;
}
$sorted_list: sort($list_to_sort);
@debug $sorted_list;
=======
// 103-sort_strings.scss - Sorted
@use "103-sort_list" as list;

@function sort($list) {
  $length: length($list);

  @for $i from 1 through $length {
    @for $j from ($i + 1) through $length {
      $a: nth($list, $i);
      $b: nth($list, $j);

      @if str-insert("", $a, 1) > str-insert("", $b, 1) {
        $temp: $a;
        $list: set-nth($list, $i, $b);
        $list: set-nth($list, $j, $temp);
      }
    }
  }

  @return $list;
}

@function set-nth($list, $n, $value) {
  $result: ();

  @for $i from 1 through length($list) {
    @if $i == $n {
      $result: append($result, $value);
    } @else {
      $result: append($result, nth($list, $i));
    }
  }

  @return $result;
}

$list_sorted: sort(list.$list_to_sort);
@debug $list_sorted;
>>>>>>> 42c3598 (initial commit)
